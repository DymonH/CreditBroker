// <auto-generated />
using System;
using Hlopov.CreditBroker.Identification.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hlopov.CreditBroker.Identification.Infrastructure.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20200707131327_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.ArmUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecoveryToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("RecoveryTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Login");

                    b.HasIndex("Name");

                    b.HasIndex("PositionId");

                    b.HasIndex("RecoveryToken");

                    b.ToTable("ArmUsers");
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.ArmUserPhone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmUserPhoneTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArmUserId");

                    b.HasIndex("ArmUserPhoneTypeId");

                    b.ToTable("ArmUserPhones");
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.ArmUserPhoneType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ArmUserPhoneTypes");
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentHeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("SuperiorDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentHeadId");

                    b.HasIndex("Name");

                    b.HasIndex("SuperiorDepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime?>("TokenCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TokenExpireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArmUserId");

                    b.HasIndex("Token");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.ArmUser", b =>
                {
                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.Department", "Department")
                        .WithMany("ArmUsers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.ArmUserPhone", b =>
                {
                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.ArmUser", "ArmUser")
                        .WithMany("Phones")
                        .HasForeignKey("ArmUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.ArmUserPhoneType", "ArmUserPhoneType")
                        .WithMany()
                        .HasForeignKey("ArmUserPhoneTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.Department", b =>
                {
                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.ArmUser", "DepartmentHead")
                        .WithMany("LeadedDepartments")
                        .HasForeignKey("DepartmentHeadId");

                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.Department", "SuperiorDepartment")
                        .WithMany()
                        .HasForeignKey("SuperiorDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hlopov.CreditBroker.Identification.Core.Entities.UserDevice", b =>
                {
                    b.HasOne("Hlopov.CreditBroker.Identification.Core.Entities.ArmUser", "ArmUser")
                        .WithMany("Devices")
                        .HasForeignKey("ArmUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
